#include <SFML/Graphics.hpp> 
#include <iostream>
using namespace std;

int main()
{
sf::RenderWindow window(sf::VideoMode(800, 600), "Quiz");
string playerName; sf::Font font;
if (!font.loadFromFile("./Montserrat-Regular.ttf")) {
cerr << "Error loading font!" << endl; 
return EXIT_FAILURE;
}

sf::Text namePrompt; namePrompt.setFont(font);
namePrompt.setString("Enter your name:");
namePrompt.setCharacterSize(24); 
namePrompt.setFillColor(sf::Color::White); 
namePrompt.setPosition(50.f, 100.f);

sf::Text playerNameText; playerNameText.setFont(font);



playerNameText.setCharacterSize(24); 
playerNameText.setFillColor(sf::Color::Red); 
playerNameText.setPosition(300.f, 100.f);

sf::Text questionText;
string question = "Wellcome to Guess the Missing Number!!";
questionText.setFont(font); 
questionText.setString(question);
questionText.setCharacterSize(24); 
questionText.setFillColor(sf::Color::Green); 
questionText.setPosition(150.f, 50.f);

sf::Text Guess;
string guess = "Guess the Missing Number!!";
Guess.setFont(font);
Guess.setString(guess); 
Guess.setCharacterSize(24);
Guess.setFillColor(sf::Color::White);
Guess.setPosition(50.f, 200.f);

int	arr[99]	= {	1, 2, 3, 4,	5, 6, 7, 8,	9, 10, 11, 12, 13, 14,	15, 16, 17, 18,
19,	20,						
21,	22,	23, 24,	25,	26, 27,	28,	29, 30, 31,	32, 33, 34, 35, 36, 37, 38, 39, 40,
41,	42,	43, 44,	45,	46, 47,	48,	49, 50, 51,	52, 53, 54, 55, 56, 57, 58, 59, 60,
61,	62,	63, 64,	65,	66, 68,	69,	70, 71, 72,	73, 74, 75, 76, 77, 78, 79, 80,
81,	82,	83, 84,	85,	86, 87,	88,	89, 90, 91,	92, 93, 94, 95, 96, 97, 98, 99, 100 };
int sum = 0;
for	(int loop =	0; loop	< 99; loop++)
sum += arr[loop];

int lasttwoDigits = sum % 100;



if (lasttwoDigits < 50) {
lasttwoDigits = 50 - lasttwoDigits;
}
 
else {
lasttwoDigits = 150 - lasttwoDigits;
}
sf::Text summ;
string sum1 = "Sum of Numbers from 1 to 100 = " ;
summ.setFont(font);
summ.setString(sum1); 
summ.setCharacterSize(24); 
summ.setFillColor(sf::Color::Red); 
summ.setPosition(50.f, 150.f);

sf::Text summ2;
summ2.setFont(font);
summ2.setString(to_string(sum)); 
summ2.setCharacterSize(24);
summ2.setFillColor(sf::Color::White); 
summ2.setPosition(450.f, 150.f);

string choices[4] = {
to_string(lasttwoDigits), to_string(lasttwoDigits + 5),
to_string(lasttwoDigits - 10),
to_string(lasttwoDigits + 20)
};

sf::Text choiceText[4];
for (int i = 0; i < 4; ++i) 
{ 
choiceText[i].setFont(font); 
choiceText[i].setString(choices[i]);
choiceText[i].setCharacterSize(20);
choiceText[i].setFillColor(sf::Color::Red);
choiceText[i].setPosition(50.f + i * 200.f, 250.f); // Adjusted positions in a straight line
}

while (window.isOpen()) { 
sf::Event event;
while (window.pollEvent(event)) 
{
if (event.type == sf::Event::Closed)
{ window.close();
}

if (event.type == sf::Event::TextEntered) 
{ if (event.text.unicode < 128) {
playerName += static_cast<char>(event.text.unicode); 
playerNameText.setString(playerName);
}
}

if (event.type == sf::Event::MouseButtonPressed && event.mouseButton.button == sf::Mouse::Left) {
sf::Vector2i mousePos = sf::Mouse::getPosition(window); 
for (int i = 0; i < 4; ++i) {
if (choiceText[i].getGlobalBounds().contains(static_cast<sf::Vector2f>(mousePos))) {
if (choices[i] == to_string(lasttwoDigits))
{ sf::Text resultText; 
resultText.setFont(font);
resultText.setCharacterSize(24);
resultText.setPosition(50.f, 350.f);

resultText.setString("Correct, " + playerName + "!");
resultText.setFillColor(sf::Color::Green);

window.draw(resultText);
 
window.display();

sf::sleep(sf::seconds(3)); 
window.close();
}
else {
sf::Text resultText; 
resultText.setFont(font);
resultText.setCharacterSize(24);
resultText.setPosition(50.f, 350.f);

resultText.setString("Incorrect, " + playerName + "!");
resultText.setFillColor(sf::Color::Red);

window.draw(resultText);
window.display();

sf::sleep(sf::seconds(3)); 
window.close();
}
}
}
}
}

window.clear(sf::Color::Black);
window.draw(namePrompt);
window.draw(summ);
window.draw(summ2); 
window.draw(summ2);
window.draw(Guess);
window.draw(playerNameText); 
window.draw(questionText);
for (int i = 0; i < 4; ++i)
{ 
window.draw(choiceText[i]);
}

window.display();
}

return EXIT_SUCCESS;
}
